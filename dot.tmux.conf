# act like the GNU screen
unbind C-b
set -g prefix C-a

# ensure that we can send Ctrl-A to other apps
bind C-a send-prefix

# bind "r" to soft reload of configuration file
unbind r
bind-key r source-file ~/.tmux.conf \; display-message "tmux configuration reloaded!"

# prevent tmux starting a shell in login mode by default, to avoid macOS's
# /usr/libexec/path_helper (or something else) mess up with our PATH variable
# https://wiki.archlinux.org/title/tmux#Start_a_non-login_shell
set -g default-command "${SHELL}"

# set delay between prefix and command, eliminate ESC key delay
set -s escape-time 0

# set first window, first pane indexes to 1, and auto-renumber windows
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

# scrollback buffer
set -g history-limit 50000

# enable vi keys (in visual mode, for example)
set -g mode-keys vi

# enable mouse, and leave an option to disable/enable
set -g mouse on
bind-key m set-option -g mouse \; display "Mouse: #{?mouse,ON,OFF}"

# pass through focus-events from terminal to the running app
set -g focus-events on

# set the default terminal mode (overrides needed for Vim colors issue inside Alacritty)
set -g default-terminal "$TERM"
set -as terminal-features ",$TERM*:RGB" # https://github.com/tmux/tmux/wiki/FAQ#how-do-i-use-rgb-colour

# enable activity alerts
set -g monitor-activity on

# status line nuts and bolts
set -g status-interval 10
# set-option -g status-position top # wanna feel iTerm-ish?
set -g status-style fg=white,bg=default
set -g status-left-length 32
set -g status-left "#[fg=gray,dim]#S  #(echo '\uebc8')  "
set -g status-right-length 64
set -g status-right '#[fg=yellow]#(echo '\ueba2') #{=8:pane_current_command} #[fg=gray]#(echo '\uea83') #{=36:pane_current_path} #[fg=gray,dim]#I:#P'
set -g window-status-format "#[fg=default,dim]#I:#W"
set -g window-status-current-format "#[fg=blue]#I:#W"
set -g pane-active-border-style fg=blue,dim

# split panes
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# new window
bind -n C-t new-window

# clear window
bind -n C-l send-keys 'C-l'\; clear-history

# popups
bind i display-popup -d "#{pane_current_path}" -E "iex"
bind t display-popup -d "#{pane_current_path}" -E "fish"

# re-arrange (move) windows with CTRL+SHIFT+Left/Right
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# move between panes with prefix+h/j/k/l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind -r M run-shell "~/.dotfiles/littles/tmux-resize.sh -l main-horizontal -p 75"
bind -r m run-shell "~/.dotfiles/littles/tmux-resize.sh -l main-vertical -p 62"
bind -r n run-shell "~/.dotfiles/littles/tmux-resize.sh -l main-vertical -p 75"
bind -r = run-shell "~/.dotfiles/littles/tmux-resize.sh -l main-vertical -p 50"

# close current pane with a prompt
bind w confirm-before -p 'Kill-pane #W? (y/n)' kill-pane

# saving logs to a file
bind-key p command-prompt -p "Save current pane's history to filename:" -I '~/tmux-#{pane_current_command}.history' 'capture-pane -S -50000; save-buffer %1; delete-buffer'

# IMPORTANT: tmate (https://tmate.io) does not work with tpm enabled!
#
# PLUGINS: see https://github.com/tmux-plugins/tpm for details.
#set -g @plugin 'tmux-plugins/tpm' # press <prefix + I> when inside tmux to install the plugins!
#set -g @plugin 'tmux-plugins/tmux-resurrect' # use <prefix + CTRL-S> to save, and <prefix + CTRL-R> to restore sessions
#set -g @plugin 'tmux-plugins/tmux-continuum' # automatic save/restore sessions (with the resurrect help)
#set -g @resurrect-strategy-nvim 'session' # don't forget to run :Obsession command in Vim!
#set -g @continuum-restore 'on'
#run '~/.tmux/plugins/tpm/tpm'
