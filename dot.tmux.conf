# act like GNU screen
unbind C-b
set -g prefix C-a

# ensure that we can send Ctrl-A to other apps
bind C-a send-prefix

# set delay between prefix and command
set -s escape-time 1

# set first window, first pane indexes to 1, and auto-renumbering
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# scrollback buffer
set -g history-limit 50000

# bind "r" to soft reload of configuration file
unbind r
bind-key r source-file ~/.tmux.conf \; display-message "tmux configuration reloaded!"

# enable vi keys (in visual mode, for example)
setw -g mode-keys vi

# disable mouse, but leave an option to enable
#set -g mouse on
bind-key m set-option -g mouse \; display "Mouse: #{?mouse,ON,OFF}"

# set the default terminal mode
set -g default-terminal "screen-256color"

# enable activity alerts
setw -g monitor-activity on

# update status bar every 30 seconds
set -g status-interval 30

# adjust status line and its colors
set -g status-left-length 40
set -g status-left "#[fg=#999999]#S "
set -g status-style fg='#aaaaaa',bg='#333333'
setw -g window-status-style fg='#aaaaaa',bg=default
setw -g window-status-current-style fg=cyan,bg=default

# adjust panes colors
setw -g pane-border-style fg='#aaaaaa'
setw -g pane-active-border-style fg='#999999',bg='#666666'

# split panes
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# moving between panes with Prefix h,j,k,l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resizing panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# quick moving between windows and panes
bind -r C-[ select-window -t :-
bind -r C-] select-window -t :+

# little macOS utility to find correct hex codes: Key Codes (https://manytricks.com/keycodes/)

# create new window by CTRL+t (update iTerm2 keys bindings; CMD+t -> Send Hex Codes 0x01 0x14)
unbind C-t
bind C-t new-window -c "#{pane_current_path}"

# clear history by CTRL+k (update iTerm2 keys bindings; CMD+k -> Send Hex Codes 0x0c)
bind C-l send-keys 'C-l'
bind C-k send-keys 'C-l'\; clear-history

# pipe pane to log file
bind P pipe-pane -o "cat >>$HOME/#W-tmux.log" \; display-message "Toggled logging to $HOME/#W-tmux.log"

# clipboard settings
if-shell "uname | grep -q Darwin" "source ~/.tmux.osx"

# smart pane switching with awareness of vim splits
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# TODO: Ubuntu box shows an error on this line, check why
# bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
run '~/.tmux/plugins/tpm/tpm'
